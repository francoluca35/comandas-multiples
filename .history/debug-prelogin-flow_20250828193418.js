// Script para debuggear el flujo de prelogin y selecci√≥n de usuario
console.log("üîç Iniciando debug del flujo de prelogin...");

// Funci√≥n para verificar estado despu√©s del prelogin
const checkPostPreloginState = () => {
  console.log("üìã ESTADO DESPU√âS DEL PRELOGIN");
  console.log("===============================");
  
  // Datos que se guardan despu√©s del prelogin exitoso
  const preloginData = {
    codActivacion: localStorage.getItem("codActivacion"),
    nombreResto: localStorage.getItem("nombreResto"),
    emailResto: localStorage.getItem("emailResto"),
    cantUsuarios: localStorage.getItem("cantUsuarios"),
    finanzas: localStorage.getItem("finanzas"),
    logo: localStorage.getItem("logo"),
    restauranteId: localStorage.getItem("restauranteId")
  };
  
  console.log("‚úÖ Datos del restaurante (despu√©s del prelogin):", preloginData);
  
  // Datos espec√≠ficos del usuario (NO deber√≠an existir despu√©s del prelogin)
  const userSpecificData = {
    usuario: localStorage.getItem("usuario"),
    rol: localStorage.getItem("rol"),
    usuarioId: localStorage.getItem("usuarioId"),
    nombreCompleto: localStorage.getItem("nombreCompleto"),
    userImage: localStorage.getItem("userImage"),
    imagen: localStorage.getItem("imagen")
  };
  
  console.log("‚ùå Datos espec√≠ficos del usuario (NO deber√≠an existir):", userSpecificData);
  
  // Verificar si hay datos de usuario espec√≠ficos
  const hasUserData = userSpecificData.usuario && userSpecificData.rol && 
                     userSpecificData.usuarioId && userSpecificData.nombreCompleto;
  
  console.log("üîç ¬øHay datos espec√≠ficos de usuario?", hasUserData);
  
  if (hasUserData) {
    console.log("‚ö†Ô∏è PROBLEMA: Hay datos espec√≠ficos de usuario despu√©s del prelogin");
    console.log("   Esto causar√≠a redirecci√≥n autom√°tica incorrecta");
  } else {
    console.log("‚úÖ CORRECTO: No hay datos espec√≠ficos de usuario despu√©s del prelogin");
    console.log("   El usuario deber√≠a poder seleccionar su cuenta");
  }
  
  return {
    hasRestaurantData: !!preloginData.restauranteId,
    hasUserData: hasUserData,
    shouldAllowUserSelection: !hasUserData
  };
};

// Funci√≥n para simular el estado despu√©s del login exitoso
const checkPostLoginState = () => {
  console.log("\nüìã ESTADO DESPU√âS DEL LOGIN EXITOSO");
  console.log("====================================");
  
  // Simular datos despu√©s del login exitoso
  const loginData = {
    usuario: localStorage.getItem("usuario"),
    rol: localStorage.getItem("rol"),
    usuarioId: localStorage.getItem("usuarioId"),
    nombreCompleto: localStorage.getItem("nombreCompleto"),
    userImage: localStorage.getItem("userImage"),
    imagen: localStorage.getItem("imagen"),
    restauranteId: localStorage.getItem("restauranteId")
  };
  
  console.log("‚úÖ Datos despu√©s del login:", loginData);
  
  const hasCompleteLoginData = loginData.usuario && loginData.rol && 
                              loginData.usuarioId && loginData.nombreCompleto &&
                              loginData.restauranteId;
  
  console.log("üîç ¬øHay datos completos de login?", hasCompleteLoginData);
  
  if (hasCompleteLoginData) {
    console.log("‚úÖ CORRECTO: Usuario completamente autenticado");
    console.log("   Deber√≠a poder acceder al sistema");
  } else {
    console.log("‚ö†Ô∏è PROBLEMA: Faltan datos de autenticaci√≥n");
    console.log("   El usuario no deber√≠a poder acceder al sistema");
  }
  
  return hasCompleteLoginData;
};

// Funci√≥n para verificar el flujo completo
const checkCompleteFlow = () => {
  console.log("\nüîÑ VERIFICANDO FLUJO COMPLETO");
  console.log("=============================");
  
  const postPrelogin = checkPostPreloginState();
  const postLogin = checkPostLoginState();
  
  console.log("\nüìä RESUMEN DEL FLUJO:");
  console.log("- Despu√©s del prelogin:", postPrelogin.shouldAllowUserSelection ? "‚úÖ Permitir selecci√≥n" : "‚ùå Redirecci√≥n incorrecta");
  console.log("- Despu√©s del login:", postLogin ? "‚úÖ Acceso permitido" : "‚ùå Acceso denegado");
  
  if (postPrelogin.shouldAllowUserSelection && postLogin) {
    console.log("\nüéâ FLUJO CORRECTO: El usuario puede seleccionar su cuenta y luego acceder");
  } else {
    console.log("\n‚ö†Ô∏è PROBLEMA EN EL FLUJO: Revisar la l√≥gica de autenticaci√≥n");
  }
};

// Ejecutar verificaci√≥n
checkCompleteFlow();

// Exportar funciones para uso en consola
window.debugPreloginFlow = {
  checkPostPreloginState,
  checkPostLoginState,
  checkCompleteFlow
};

console.log("\nüí° Usa window.debugPreloginFlow.checkCompleteFlow() para verificar el flujo");
